<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>

	
<!-- description du déploiement de l'appli web, utilisé par TOMCAT -->
	  
    <!-- Nom de notre Portlet -->
    <display-name>Portlet lecture</display-name>
	
	<!-- ajout Gwe  de applicationContextGwe.xml -->
	<!-- Initialisation de paramètres utilisés par l'application web => ici, il s'agit d'un -->
    <!-- Fichier de configuration Spring => sera appelé au démarrage TOMCAT-->
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/classes/applicationContextGwe.xml</param-value>
    </context-param>
	<!-- -->
	
	<!-- Fichier de config JSF -->
    <context-param>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>
            /WEB-INF/classes/faces-config.xml
        </param-value>
        <description>
            Comma separated list of URIs of (additional) faces config files.
            (e.g. /WEB-INF/my-config.xml)
            See JSF 1.0 PRD2, 10.3.2
        </description>
    </context-param>

	<!-- Mode de stockage des états des composants graphiques JSF -->
    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>client</param-value>
        <description>
            State saving method: "client" or "server" (= default)
            See JSF Specification 2.5.2
        </description>
    </context-param>

	<!-- Ajout Gwe -->
    <!-- Listener SPRING afin de savoir quand le contexte est initialisé pour ensuite charger la config Spring -->
 	<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
	<!-- -->
	
	<!-- Listener JSF -->
    <listener>
        <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
    </listener>
    
	<!-- Servlet JSF et son mapping : toutes les pages .faces -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.faces</url-pattern>
    </servlet-mapping>

    <!-- Welcome files -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
	
	<!-- Interdire l'accès direct aux pages .jsp -->
    <security-constraint>
    	<display-name>
    		Prevent access to raw JSP pages that are for JSF pages.
    	</display-name>
    	<web-resource-collection>
    		<web-resource-name>Raw-JSF-JSP-Pages</web-resource-name>
    		<url-pattern>*.jsp</url-pattern>
    	</web-resource-collection>
    	<auth-constraint>
    		<description>No roles, so no direct access</description>
    	</auth-constraint>
    </security-constraint>
</web-app>