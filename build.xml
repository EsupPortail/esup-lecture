<project name="esup-lecture" default="compile" basedir=".">

	<property name="recover.previous-versions" value="1.2.7,1.2.6,1.2.5,1.2.4,1.2.3,1.2.2,1.2.1,1.2.0,1.1.0,1.0.0,0.9.1,0.9.0,0.8.3,0.8.2,0.8.1,0.8.0" />
    <property file="properties/config.properties"/>
	<!-- Wee do not use esup-commons's recover file definition -->
    <property name="commons.recover.files" value="" />
	<!-- file to recover -->
	<property name="app.recover.files"
		value="
		properties/i18n/bundles/Custom_*.properties
		properties/config.properties
		properties/esup-lecture.xml
		properties/mappings.xml
		" />
	<property name="batch-class"
		value="org.esupportail.lecture.batch.Batch" />
	<import file="${basedir}/build-commons.xml" />
	
	<target name="check-shared-config" depends="commons-check-shared-config" >
		<property name="init.config" value="${props.dir}/init/init.xml"/>
		<if>
			<not>
				<available file="${init.config}"/>
			</not>
			<then>
				<fail message="${init.config} not found." />	
			</then>
		</if>
	</target>

	<target name="check-web-config" depends="commons-check-web-config,check-shared-config" />

	<target name="check-batch-config" depends="commons-check-batch-config,check-shared-config" />

	<target name="test-config" depends="check-batch-config,check-web-config,compile" description="test the configuration" >
		<java fork="true" dir="${build.dir}" classname="${batch-class}">
			<classpath refid="batch.classpath" />
			<sysproperty key="log4j.configuration" value="file:${log4j.batch-config}" />
			<arg value="test-beans"/>
	    </java>
	</target>

	<target name="test-config-batch" depends="check-batch-config,compile-batch" description="test the configuration for a batch only" >
		<java fork="true" dir="${build.dir}" classname="${batch-class}">
			<classpath refid="batch.classpath" />
			<sysproperty key="log4j.configuration" value="file:${log4j.batch-config}" />
			<arg value="test-beans"/>
	    </java>
	</target>

	<target name="set-download-properties" depends="read-commons-properties" >
		<property file="${app.config}" />
		<property name="app.repository.libs" value="
		" />
		<property name="app.repository.path-prefix" value="http://sourcesup.cru.fr/cgi/viewvc.cgi/tags/${app.version}/${app.name}" />
		<property name="app.repository.path-suffix" value="?root=${app.name}&amp;view=co" />
	</target>
	
	<target name="prepare" depends="commons-prepare" />

	<target name="compile-shared" depends="check-shared-config,prepare,commons-compile-shared" />

	<target name="compile-batch" depends="compile-shared,commons-compile-batch" description="compile the project for a batch only" />

	<target name="compile-web" depends="compile-shared,commons-compile-web" description="compile the project for the web" />

	<target name="compile" depends="compile-web,compile-batch" description="compile the project" />

	<target name="deploy" depends="compile-web,commons-deploy" description="deploy the application" >
        <if>
            <not>
                <isset property="use.cas" />
            </not>
            <then>
                <property name="use.cas" value="true" />
            </then>
        </if>
		<if>
			<equals arg1="${deploy.type}" arg2="portlet" />
			<then> <!-- portket -->
                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false"
                    flags="g"
                    match=".!-- IS_PORTLET" 
                    replace="" /> 
                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false" 
                    flags="g"
                    match="IS_PORTLET --." 
                    replace="" />
                <replaceregexp file="${deploy.home}/WEB-INF/classes/properties/auth/auth.xml" byline="false"
                    flags="g"
                    match=".!-- IS_PORTLET" 
                    replace="" /> 
                <replaceregexp file="${deploy.home}/WEB-INF/classes/properties/auth/auth.xml" byline="false" 
                    flags="g"
                    match="IS_PORTLET --." 
                    replace="" />
			</then>
			<else> <!-- servlet or quickstart -->
                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false"
                           flags="g"
                           match=".!-- IS_SERVLET" 
                           replace="" /> 
                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false" 
                           flags="g"
                           match="IS_SERVLET --." 
                           replace="" />
                <replaceregexp file="${deploy.home}/WEB-INF/classes/properties/auth/auth.xml" byline="false"
                           flags="g"
                           match=".!-- IS_SERVLET" 
                           replace="" /> 
                <replaceregexp file="${deploy.home}/WEB-INF/classes/properties/auth/auth.xml" byline="false" 
                           flags="g"
                           match="IS_SERVLET --." 
                           replace="" />
			    <replace file="${deploy.home}/WEB-INF/web.xml" 
			    	token="[TOMCAT_HOST]" 
			        value="${tomcat.host}" />
                <replace file="${deploy.home}/WEB-INF/web.xml"
                    token="[TOMCAT_PORT_STRING]" 
                    value="${tomcat.port.string}" />
		        <if>
    	            <ispropertytrue property="use.cas" /> <!-- true by default except if excplecitly false in, for ex., build-devel.properties -->
    	            <then>
    	                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false"
    	                           flags="g"
    	                           match=".!-- CAS_SERVLET" 
    	                           replace="" /> 
    	                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false" 
    	                           flags="g"
    	                           match="CAS_SERVLET --." 
    	                           replace="" />
    	            </then>
    	        </if>
			</else>
		</if>
        <if>
            <ispropertytrue property="use.cas" /> <!-- true by default except if excplecitly false in, for ex., build-devel.properties -->
            <then>
                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false"
                           flags="g"
                           match=".!-- USE_CAS" 
                           replace="" /> 
                <replaceregexp file="${deploy.home}/WEB-INF/web.xml" byline="false" 
                           flags="g"
                           match="USE_CAS --." 
                           replace="" />
                <replace file="${deploy.home}/WEB-INF/web.xml" 
                    token="[CAS_URL]" 
                    value="${casService.url}" />
                <if>
                    <not>
                        <isset property="casService.proxyCallbackUrl" />
                    </not>
                    <then>
                        <property name="casService.proxyCallbackUrl" value="https://localhost:8080/esup-lecture/CasProxyServlet" />
                        <echo>casService.proxyCallbackUrl is not set, defaults to ${casService.proxyCallbackUrl}.</echo>
                    </then>
                </if>
                <replace file="${deploy.home}/WEB-INF/web.xml"
                    token="[CAS_PROXY_CALLBACK_URL]" 
                    value="${casService.proxyCallbackUrl}" />
            </then>
        </if>
	</target>

	<target name="clean" depends="commons-clean" description="clean the project" />

	<target name="recover-config" depends="commons-recover-config" description="recover configuration files from an older version" />

	<target name="init" >
		<fail message="target init is deprecated, please use target init-data instead"/>
	</target>

	<target name="init-data" depends="compile-batch,check-batch-config,commons-init-data" description="initialize the database" />

	<target name="upgrade" depends="compile-batch,check-batch-config,commons-upgrade" description="upgrade the database" /> 
	
	<target name="check-version" depends="compile-batch,check-batch-config,commons-check-version" description="check the database version" /> 

	<target name="start" depends="deploy,check-web-config,commons-start-tomcat" description="Start the application" />

	<target name="stop" depends="commons-stop-tomcat" description="Stop the application" />

</project>


