<?xml version="1.0" encoding="UTF-8" ?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"	
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns:p="http://www.springframework.org/schema/p"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	>

	<!-- 
		/properties/domain/domain.xml
		The configuration file for domain services.
		This file is referenced by /properties/applicationContext.xml.
	-->


	<!-- 
	***************************************************
				FACADE SERVICE 
	***************************************************-->
	<bean
		id="facadeService"
		class="org.esupportail.lecture.domain.FacadeService">
		<description>
			This bean provides the facade service (domain and external) of the application, used by the 
			web interface and the command-line calls.
			It must extend abstract org.esupportail.lecture.domain.FacadeService.
		</description>
		<property name="domainService" ref="domainService"/>
		<property name="externalService" ref="${externalService.bean}"/>
	</bean>
	 
	<!-- 
	***************************************************
				DOMAIN SERVICE 
	***************************************************-->
	<bean 
		id="domainService"
		class="org.esupportail.lecture.domain.DomainServiceImpl">
		<description>
			This bean provides the domain service of the application, used by the 
			web interface and the command-line calls.
			It must implement interface org.esupportail.lecture.domain.DomainService.
		</description>
		<property name="i18nService" ref="i18nService" />
		<property name="authenticationService" ref="${authenticationService.bean}" />
	</bean> 
	
	<aop:config>
		<aop:pointcut id="daoMethods"
			expression="execution(* org.esupportail.lecture.domain.DomainServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="daoMethods" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="mark*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="fold*" propagation="REQUIRED" />
			<tx:method name="unfold*" propagation="REQUIRED" />
			<tx:method name="subscribe*" propagation="REQUIRED" />
			<tx:method name="unsubscribe*" propagation="REQUIRED" />
			<tx:method name="getContext" propagation="REQUIRED" /> <!-- userProfile and context can be computed -and changed- during getContext -->
			<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	

	<!-- Main domain model class -->
	<bean id="channel" class="org.esupportail.lecture.domain.model.Channel">
		<description>
			This bean is the main domain model class, used by the domainService.
		</description>
		<property name="cacheManager" ref="cacheManager" />
		<property name="daoService" ref="daoService"/>
		<property name="externalService" ref="${externalService.bean}"/>
		<property name="configFilePath" value="${configFilePath}"/>
		<property name="mappingFilePath" value="/properties/mappings.xml"/>	
		
		<!--  TODO : export these values in config.properties -->
		
		<!-- Defined in esup-lecture.xml
		<property name="gestUser" value="guest"/> -->
		<property name="contextString" value="context"/>
		<property name="dummyTtl" value="60"/>
		<property name="defaultTtl" value="3600"/>
		<property name="defaultTimeOut" value="3000"/>
		<property name="maxTreeSize" value="100"/>
		<property name="defaultTreeSize" value="20"/>
		<property name="configTtl" value="120"/>
		<property name="viewDef" value="viewDef"/>
		<property name="nbreArticle" value="nbreArticle"/>
		<property name="lienVue" value="lienVue"/>
		
	</bean>
	
	<!-- 
	***************************************************
				EXTERNAL SERVICE 
	***************************************************-->
	<bean
		id="externalServiceStub"
		class="org.esupportail.lecture.domain.ExternalServiceStub">
	</bean>

	<bean
		id="externalServiceImpl"
		class="org.esupportail.lecture.domain.ExternalServiceImpl">
		<description>
			This bean provides the external (portlet and/or servlet) service of the application, used by the 
			web interface and the command-line calls.
			It must implement interface org.esupportail.lecture.domain.ExternalService.
		</description>
		<property name="authenticationService" ref="${authenticationService.bean}" />
		<property name="portletService" ref="portletService" />
	</bean>
	
	<bean id="portletService" class="org.esupportail.lecture.domain.utils.PortletService">
		<description>external service in portlet mode</description>
		<property name="assertionHandler" ref="assertionHandler" />
	</bean>

	<bean id="assertionHandler" class="org.esupportail.lecture.domain.AssertionHandler"
		scope="globalSession">
		<description>AssertionHandler is used to keep in user session the TGT</description>
		<property name="ticketValidator" ref="ticketValidator" />
		<property name="service" value="${casService.service}" />
		<aop:scoped-proxy proxy-target-class="false" />
	</bean> 	
	
	<!-- 
	***************************************************
				DOMAIN TEST 
	***************************************************-->
	<bean
		id="domainTest"
		class="org.esupportail.lecture.domain.DomainTest">
		<description>
			This bean calls FacadeService instead of web interface and the command-line calls.
		</description>
	</bean>
	<!-- 
	***************************************************
				DOMAIN TOOLS 
	***************************************************-->
	<bean id="domainTools" 
        class="org.esupportail.lecture.domain.DomainTools">
		<property name="cacheManager" ref="cacheManager" />
	</bean>

</beans>
