<project name="esup-lecture-devel" default="_compile" basedir=".">

	<property name="commons.zip-files.exclude" value="
		webapp/index.jsp
		webapp/stylesheets/exception.jsp
	" />
	<property name="app.zip-files.include" value="
    	build.xml 
		version.properties
		src/**/*.java src/**/*.html 
		webapp/index.jsp
    	webapp/media/**/*
		webapp/META-INF/MANIFEST.MF
		webapp/stylesheets/**/*
		webapp/WEB-INF/**/*example*
		webapp/WEB-INF/lib/*
		properties/**/*example*
		properties/dao/dao.xml
		properties/dao/hibernate/hibernate.cfg.xml
		properties/dao/hibernate/hibernate-jdbc.cfg.xml
		properties/dao/hibernate/hibernate-jndi.cfg.xml
		properties/dao/hibernate/mapping/*
		properties/i18n/bundles/*.properties
		properties/misc/abstractBeans.xml
		properties/misc/application.xml
		properties/smtp/smtp.xml
		properties/exceptionHandling/exceptionHandling.xml
		properties/web/controllers.xml
		properties/web/converters.xml
		properties/applicationContext.xml
		properties/jsf/application.xml
		properties/jsf/managed-beans.xml
		properties/jsf/navigation-rules.xml
		properties/cache/*.xml
		properties/deepLinking/deepLinking.xml
		properties/i18n/i18n.xml
		properties/ldap/ldap.xml
		properties/auth/auth.xml
		properties/portal/portal.xml
		properties/urlGeneration/urlGeneration.xml
		properties/domain/domain.xml
		properties/portal/portal.xml
		properties/logging/log4j-batch.properties
		properties/logging/log4j.properties
		properties/init/init.xml
		properties/tags/tags.xml
		properties/tests/tests.xml
		properties/*.dtd
		properties/mappings.xml
		properties/esup-lecture.xml
		properties/defaults.properties
		build-example.properties
		webapp/WEB-INF/web.xml
		webapp/WEB-INF/portlet.xml
		build-quick-start-example.properties
	" />            
	<property name="app.zip-files.exclude" value="
		build/**/* 
		deploy/**/* 
		tmp/**/* 
		website/**/*
		apache-tomcat-*/**/* 
		properties/i18n/bundles/Custom_*.properties
	" />

	<property name="commons.basedir" value="${basedir}/../esup-commons-1.3.6"/>
	
	<property file="${basedir}/build-devel.properties"/>
	
	<import file="${commons.basedir}/build-commons-devel.xml"/>

	<target name="_clean" depends="clean,_commons-clean" description="clean everything" />
	
	<target name="_prepare" depends="prepare,_commons-prepare" description="prepare the application" />
	
	<target name="_compile" depends="_prepare,_commons-compile,compile" description="compile the application" />
	
	<target name="_deploy" depends="_compile,_commons-deploy,deploy" description="deploy the application" />
	
	<target name="_start" depends="start" description="deploy and start Tomcat" />
		
	<target name="_stop" depends="stop" description="stop Tomcat" />
		
	<target name="_restart" depends="_stop,_start" description="deploy and restart Tomcat" />

	<target name="_dist" depends="use-default-conf,_commons-dist" description="build ZIP archives" />

	<target name="_doc" depends="_commons-doc"
		description="build the web site">
		<copy todir="${website.dir}/uml">
			<fileset dir="${doc.dir}/uml" />
		</copy>
		<copy todir="${website.dir}/api">
			<fileset dir="${doc.dir}/api" />
		</copy>
	</target>

	<target name="_upload-doc" depends="_doc,_commons-upload-doc" description="update the web site" />

	<property name="rename-application.config" value="${basedir}/renameApplication.properties" />	
	<target name="_rename-application" description="rename the application" >
		<echo>Refactoring in progress, do not interrupt this task!</echo>
		<if>
			<not>
				<available file="${rename-application.config}" />
			</not>
			<then>
				<fail>file ${rename-application.config} not found.</fail>
			</then>
		</if>
		<replace 
			dir="${basedir}" 
			replaceFilterFile="${rename-application.config}" 
			excludes="renameApplication*.properties build-commons.xml build-commons-devel.xml version.properties" />
		<property file="${rename-application.config}" />
		<move file="${src.dir}/org/esupportail/lecture" tofile="${src.dir}/${org/esupportail/lecture}" />
	</target>

	<target name="test-domain" depends="_commons-compile,commons-check-batch-config" description="test the domain application of esup-lecture"> 
		<java fork="true" dir="${build.dir}" classname="org.esupportail.lecture.domain.DomainTest">
			<classpath refid="batch.classpath" />
			<sysproperty key="log4j.configuration" value="file:${log4j.batch-config}" />
			<arg value="test-domain"/>
	    </java>
	</target>	
	
	<target name="test-dao" depends="_commons-compile,commons-check-batch-config" description="test the domain application of esup-lecture"> 
		<java fork="true" dir="${build.dir}" classname="org.esupportail.lecture.test.drivers.TestDAORemoteXMLRaymond">
			<classpath refid="batch.classpath" />
			<sysproperty key="log4j.configuration" value="file:${log4j.batch-config}" />
			<arg value="test-domain"/>
	    </java>
	</target>

    <target name="use-default-conf" description="use default ESUP-Lecture configuration files">
    	<antcall target="copy-conf">
            <param name="conf-type" value="default"/>
    	</antcall>
	</target>
	
	<target name="use-test-conf" depends="use-default-conf" description="use test ESUP-Lecture configuration files">
        <antcall target="copy-conf">
            <param name="conf-type" value="${developer.name}"/>
        </antcall>
	</target>

	<target name="copy-conf">
        <!-- iteration for xml files -->
        <foreach list="properties/esup-lecture,properties/mappings,properties/domain/domain,properties/auth/auth,properties/applicationContext" 
            param="file-to-copy" target="copy-conf2">
            <param name="conf-type" value="${conf-type}"/>
            <param name="file-type" value="xml"/>
        </foreach>
        <!-- iteration for properties files -->
        <foreach list="properties/logging/log4j" 
            param="file-to-copy" target="copy-conf2">
            <param name="conf-type" value="${conf-type}"/>
            <param name="file-type" value="properties"/>
        </foreach>
	</target>
	
	<target name="copy-conf2">
		<if>
			<available file="${file-to-copy}.${conf-type}.${file-type}"/>
		    <then>
		    	<copy file="${file-to-copy}.${conf-type}.${file-type}" tofile="${file-to-copy}.${file-type}" overwrite="true" verbose="true"/>
			</then>
			<else>
				<if> 
					<equals arg1="${conf-type}" arg2="default" />
					<then> 
						<fail message="A ${file-to-copy}.${conf-type}.${file-type} is needed."/>
					</then>
				</if>
			</else>
		</if>
	</target>

</project>

